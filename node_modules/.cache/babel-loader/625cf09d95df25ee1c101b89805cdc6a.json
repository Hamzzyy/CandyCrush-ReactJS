{"ast":null,"code":"import _toConsumableArray from \"C:\\\\wamp64\\\\www\\\\candy-crush-reactjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\wamp64\\\\www\\\\candy-crush-reactjs\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\wamp64\\\\www\\\\candy-crush-reactjs\\\\src\\\\App.js\";\nimport React from 'react';\nimport ScoreBoard from './components/ScoreBoard';\nimport blueCandy from './images/blue-candy.png';\nimport greenCandy from './images/green-candy.png';\nimport orangeCandy from './images/orange-candy.png';\nimport purpleCandy from './images/purple-candy.png';\nimport redCandy from './images/red-candy.png';\nimport yellowCandy from './images/yellow-candy.png';\nimport blank from './images/blank.png';\nvar width = 8;\nvar candyColors = [blueCandy, orangeCandy, purpleCandy, redCandy, yellowCandy, greenCandy];\nvar App = function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentColorArrangement = _useState2[0],\n    setCurrentColorArrangement = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    squareBeingDragged = _useState4[0],\n    setSquareBeingDragged = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    squareBeingReplaced = _useState6[0],\n    setSquareBeingReplaced = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    scoreDisplay = _useState8[0],\n    setScoreDisplay = _useState8[1];\n  var checkForColumnOfFour = function checkForColumnOfFour() {\n    var _loop = function _loop() {\n      var columnOfFour = [i, i + width, i + width * 2, i + width * 3];\n      var decidedColor = currentColorArrangement[i];\n      var isBlank = currentColorArrangement[i] === blank;\n      if (columnOfFour.every(function (square) {\n        return currentColorArrangement[square] === decidedColor && !isBlank;\n      })) {\n        setScoreDisplay(function (score) {\n          return score + 4;\n        });\n        columnOfFour.forEach(function (square) {\n          return currentColorArrangement[square] = blank;\n        });\n        return {\n          v: true\n        };\n      }\n    };\n    for (var i = 0; i <= 39; i++) {\n      var _ret = _loop();\n      if (typeof _ret === \"object\") return _ret.v;\n    }\n  };\n  var checkForRowOfFour = function checkForRowOfFour() {\n    var _loop2 = function _loop2() {\n      var rowOfFour = [i, i + 1, i + 2, i + 3];\n      var decidedColor = currentColorArrangement[i];\n      var notValid = [5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53, 54, 55, 62, 63, 64];\n      var isBlank = currentColorArrangement[i] === blank;\n      if (notValid.includes(i)) return \"continue\";\n      if (rowOfFour.every(function (square) {\n        return currentColorArrangement[square] === decidedColor && !isBlank;\n      })) {\n        setScoreDisplay(function (score) {\n          return score + 4;\n        });\n        rowOfFour.forEach(function (square) {\n          return currentColorArrangement[square] = blank;\n        });\n        return {\n          v: true\n        };\n      }\n    };\n    for (var i = 0; i < 64; i++) {\n      var _ret2 = _loop2();\n      if (_ret2 === \"continue\") continue;\n      if (typeof _ret2 === \"object\") return _ret2.v;\n    }\n  };\n  var checkForColumnOfThree = function checkForColumnOfThree() {\n    var _loop3 = function _loop3() {\n      var columnOfThree = [i, i + width, i + width * 2];\n      var decidedColor = currentColorArrangement[i];\n      var isBlank = currentColorArrangement[i] === blank;\n      if (columnOfThree.every(function (square) {\n        return currentColorArrangement[square] === decidedColor && !isBlank;\n      })) {\n        setScoreDisplay(function (score) {\n          return score + 3;\n        });\n        columnOfThree.forEach(function (square) {\n          return currentColorArrangement[square] = blank;\n        });\n        return {\n          v: true\n        };\n      }\n    };\n    for (var i = 0; i <= 47; i++) {\n      var _ret3 = _loop3();\n      if (typeof _ret3 === \"object\") return _ret3.v;\n    }\n  };\n  var checkForRowOfThree = function checkForRowOfThree() {\n    var _loop4 = function _loop4() {\n      var rowOfThree = [i, i + 1, i + 2];\n      var decidedColor = currentColorArrangement[i];\n      var notValid = [6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55, 63, 64];\n      var isBlank = currentColorArrangement[i] === blank;\n      if (notValid.includes(i)) return \"continue\";\n      if (rowOfThree.every(function (square) {\n        return currentColorArrangement[square] === decidedColor && !isBlank;\n      })) {\n        setScoreDisplay(function (score) {\n          return score + 3;\n        });\n        rowOfThree.forEach(function (square) {\n          return currentColorArrangement[square] = blank;\n        });\n        return {\n          v: true\n        };\n      }\n    };\n    for (var i = 0; i < 64; i++) {\n      var _ret4 = _loop4();\n      if (_ret4 === \"continue\") continue;\n      if (typeof _ret4 === \"object\") return _ret4.v;\n    }\n  };\n  var moveIntoSquareBelow = function moveIntoSquareBelow() {\n    for (var i = 0; i <= 55; i++) {\n      var firstRow = [0, 1, 2, 3, 4, 5, 6, 7];\n      var isFirstRow = firstRow.includes(i);\n      if (isFirstRow && currentColorArrangement[i] === blank) {\n        var randomNumber = Math.floor(Math.random() * candyColors.length);\n        currentColorArrangement[i] = candyColors[randomNumber];\n      }\n      if (currentColorArrangement[i + width] === blank) {\n        currentColorArrangement[i + width] = currentColorArrangement[i];\n        currentColorArrangement[i] = blank;\n      }\n    }\n  };\n  var dragStart = function dragStart(e) {\n    setSquareBeingDragged(e.target);\n  };\n  var dragDrop = function dragDrop(e) {\n    setSquareBeingReplaced(e.target);\n  };\n  var dragEnd = function dragEnd() {\n    var squareBeingDraggedId = parseInt(squareBeingDragged.getAttribute('data-id'));\n    var squareBeingReplacedId = parseInt(squareBeingReplaced.getAttribute('data-id'));\n    currentColorArrangement[squareBeingReplacedId] = squareBeingDragged.getAttribute('src');\n    currentColorArrangement[squareBeingDraggedId] = squareBeingReplaced.getAttribute('src');\n    var validMoves = [squareBeingDraggedId - 1, squareBeingDraggedId - width, squareBeingDraggedId + 1, squareBeingDraggedId + width];\n    var validMove = validMoves.includes(squareBeingReplacedId);\n    var isAColumnOfFour = checkForColumnOfFour();\n    var isARowOfFour = checkForRowOfFour();\n    var isAColumnOfThree = checkForColumnOfThree();\n    var isARowOfThree = checkForRowOfThree();\n    if (squareBeingReplacedId && validMove && (isARowOfThree || isARowOfFour || isAColumnOfFour || isAColumnOfThree)) {\n      setSquareBeingDragged(null);\n      setSquareBeingReplaced(null);\n    } else {\n      currentColorArrangement[squareBeingReplacedId] = squareBeingReplaced.getAttribute('src');\n      currentColorArrangement[squareBeingDraggedId] = squareBeingDragged.getAttribute('src');\n      setCurrentColorArrangement(_toConsumableArray(currentColorArrangement));\n    }\n  };\n  var createBoard = function createBoard() {\n    var randomColorArrangement = [];\n    for (var i = 0; i < width * width; i++) {\n      var randomColor = candyColors[Math.floor(Math.random() * candyColors.length)];\n      randomColorArrangement.push(randomColor);\n    }\n    setCurrentColorArrangement(randomColorArrangement);\n  };\n  useEffect(function () {\n    createBoard();\n  }, []);\n  useEffect(function () {\n    var timer = setInterval(function () {\n      checkForColumnOfFour();\n      checkForRowOfFour();\n      checkForColumnOfThree();\n      checkForRowOfThree();\n      moveIntoSquareBelow();\n      setCurrentColorArrangement(_toConsumableArray(currentColorArrangement));\n    }, 100);\n    return function () {\n      return clearInterval(timer);\n    };\n  }, [checkForColumnOfFour, checkForRowOfFour, checkForColumnOfThree, checkForRowOfThree, moveIntoSquareBelow, currentColorArrangement]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, currentColorArrangement.map(function (candyColor, index) {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      key: index,\n      src: candyColor,\n      alt: candyColor,\n      \"data-id\": index,\n      draggable: true,\n      onDragStart: dragStart,\n      onDragOver: function onDragOver(e) {\n        return e.preventDefault();\n      },\n      onDragEnter: function onDragEnter(e) {\n        return e.preventDefault();\n      },\n      onDragLeave: function onDragLeave(e) {\n        return e.preventDefault();\n      },\n      onDrop: dragDrop,\n      onDragEnd: dragEnd,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    });\n  })), /*#__PURE__*/React.createElement(ScoreBoard, {\n    score: scoreDisplay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }));\n};\nexport default App;","map":{"version":3,"names":["React","ScoreBoard","blueCandy","greenCandy","orangeCandy","purpleCandy","redCandy","yellowCandy","blank","width","candyColors","App","_useState","useState","_useState2","_slicedToArray","currentColorArrangement","setCurrentColorArrangement","_useState3","_useState4","squareBeingDragged","setSquareBeingDragged","_useState5","_useState6","squareBeingReplaced","setSquareBeingReplaced","_useState7","_useState8","scoreDisplay","setScoreDisplay","checkForColumnOfFour","_loop","columnOfFour","i","decidedColor","isBlank","every","square","score","forEach","v","_ret","checkForRowOfFour","_loop2","rowOfFour","notValid","includes","_ret2","checkForColumnOfThree","_loop3","columnOfThree","_ret3","checkForRowOfThree","_loop4","rowOfThree","_ret4","moveIntoSquareBelow","firstRow","isFirstRow","randomNumber","Math","floor","random","length","dragStart","e","target","dragDrop","dragEnd","squareBeingDraggedId","parseInt","getAttribute","squareBeingReplacedId","validMoves","validMove","isAColumnOfFour","isARowOfFour","isAColumnOfThree","isARowOfThree","_toConsumableArray","createBoard","randomColorArrangement","randomColor","push","useEffect","timer","setInterval","clearInterval","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","candyColor","index","key","src","alt","draggable","onDragStart","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","onDragEnd"],"sources":["C:/wamp64/www/candy-crush-reactjs/src/App.js"],"sourcesContent":["import React from 'react'\r\nimport ScoreBoard from './components/ScoreBoard'\r\nimport blueCandy from './images/blue-candy.png'\r\nimport greenCandy from './images/green-candy.png'\r\nimport orangeCandy from './images/orange-candy.png'\r\nimport purpleCandy from './images/purple-candy.png'\r\nimport redCandy from './images/red-candy.png'\r\nimport yellowCandy from './images/yellow-candy.png'\r\nimport blank from './images/blank.png'\r\n\r\nconst width = 8\r\nconst candyColors = [\r\n    blueCandy,\r\n    orangeCandy,\r\n    purpleCandy,\r\n    redCandy,\r\n    yellowCandy,\r\n    greenCandy\r\n]\r\n\r\nconst App = () => {\r\n    const [currentColorArrangement, setCurrentColorArrangement] = useState([])\r\n    const [squareBeingDragged, setSquareBeingDragged] = useState(null)\r\n    const [squareBeingReplaced, setSquareBeingReplaced] = useState(null)\r\n    const [scoreDisplay, setScoreDisplay] = useState(0)\r\n\r\n    const checkForColumnOfFour = () => {\r\n        for (let i = 0; i <= 39; i++) {\r\n            const columnOfFour = [i, i + width, i + width * 2, i + width * 3]\r\n            const decidedColor = currentColorArrangement[i]\r\n            const isBlank = currentColorArrangement[i] === blank\r\n\r\n            if (columnOfFour.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\r\n                setScoreDisplay((score) => score + 4)\r\n                columnOfFour.forEach(square => currentColorArrangement[square] = blank)\r\n                return true\r\n            }\r\n        }\r\n    }\r\n\r\n    const checkForRowOfFour = () => {\r\n        for (let i = 0; i < 64; i++) {\r\n            const rowOfFour = [i, i + 1, i + 2, i + 3]\r\n            const decidedColor = currentColorArrangement[i]\r\n            const notValid = [5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53, 54, 55, 62, 63, 64]\r\n            const isBlank = currentColorArrangement[i] === blank\r\n\r\n            if (notValid.includes(i)) continue\r\n\r\n            if (rowOfFour.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\r\n                setScoreDisplay((score) => score + 4)\r\n                rowOfFour.forEach(square => currentColorArrangement[square] = blank)\r\n                return true\r\n            }\r\n        }\r\n    }\r\n\r\n    const checkForColumnOfThree = () => {\r\n        for (let i = 0; i <= 47; i++) {\r\n            const columnOfThree = [i, i + width, i + width * 2]\r\n            const decidedColor = currentColorArrangement[i]\r\n            const isBlank = currentColorArrangement[i] === blank\r\n\r\n            if (columnOfThree.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\r\n                setScoreDisplay((score) => score + 3)\r\n                columnOfThree.forEach(square => currentColorArrangement[square] = blank)\r\n                return true\r\n            }\r\n        }\r\n    }\r\n\r\n    const checkForRowOfThree = () => {\r\n        for (let i = 0; i < 64; i++) {\r\n            const rowOfThree = [i, i + 1, i + 2]\r\n            const decidedColor = currentColorArrangement[i]\r\n            const notValid = [6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55, 63, 64]\r\n            const isBlank = currentColorArrangement[i] === blank\r\n\r\n            if (notValid.includes(i)) continue\r\n\r\n            if (rowOfThree.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\r\n                setScoreDisplay((score) => score + 3)\r\n                rowOfThree.forEach(square => currentColorArrangement[square] = blank)\r\n                return true\r\n            }\r\n        }\r\n    }\r\n\r\n    const moveIntoSquareBelow = () => {\r\n        for (let i = 0; i <= 55; i++) {\r\n            const firstRow = [0, 1, 2, 3, 4, 5, 6, 7]\r\n            const isFirstRow = firstRow.includes(i)\r\n\r\n            if (isFirstRow && currentColorArrangement[i] === blank) {\r\n                let randomNumber = Math.floor(Math.random() * candyColors.length)\r\n                currentColorArrangement[i] = candyColors[randomNumber]\r\n            }\r\n\r\n            if ((currentColorArrangement[i + width]) === blank) {\r\n                currentColorArrangement[i + width] = currentColorArrangement[i]\r\n                currentColorArrangement[i] = blank\r\n            }\r\n        }\r\n    }\r\n\r\n    const dragStart = (e) => {\r\n        setSquareBeingDragged(e.target)\r\n    }\r\n    const dragDrop = (e) => {\r\n        setSquareBeingReplaced(e.target)\r\n    }\r\n    const dragEnd = () => {\r\n        const squareBeingDraggedId = parseInt(squareBeingDragged.getAttribute('data-id'))\r\n        const squareBeingReplacedId = parseInt(squareBeingReplaced.getAttribute('data-id'))\r\n\r\n        currentColorArrangement[squareBeingReplacedId] = squareBeingDragged.getAttribute('src')\r\n        currentColorArrangement[squareBeingDraggedId] = squareBeingReplaced.getAttribute('src')\r\n\r\n        const validMoves = [\r\n            squareBeingDraggedId - 1,\r\n            squareBeingDraggedId - width,\r\n            squareBeingDraggedId + 1,\r\n            squareBeingDraggedId + width\r\n        ]\r\n\r\n        const validMove = validMoves.includes(squareBeingReplacedId)\r\n\r\n        const isAColumnOfFour = checkForColumnOfFour()\r\n        const isARowOfFour = checkForRowOfFour()\r\n        const isAColumnOfThree = checkForColumnOfThree()\r\n        const isARowOfThree = checkForRowOfThree()\r\n\r\n        if (squareBeingReplacedId &&\r\n            validMove &&\r\n            (isARowOfThree || isARowOfFour || isAColumnOfFour || isAColumnOfThree)) {\r\n            setSquareBeingDragged(null)\r\n            setSquareBeingReplaced(null)\r\n        } else {\r\n            currentColorArrangement[squareBeingReplacedId] = squareBeingReplaced.getAttribute('src')\r\n            currentColorArrangement[squareBeingDraggedId] = squareBeingDragged.getAttribute('src')\r\n            setCurrentColorArrangement([...currentColorArrangement])\r\n        }\r\n    }\r\n\r\n\r\n    const createBoard = () => {\r\n        const randomColorArrangement = []\r\n        for (let i = 0; i < width * width; i++) {\r\n            const randomColor = candyColors[Math.floor(Math.random() * candyColors.length)]\r\n            randomColorArrangement.push(randomColor)\r\n        }\r\n        setCurrentColorArrangement(randomColorArrangement)\r\n    }\r\n\r\n    useEffect(() => {\r\n        createBoard()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            checkForColumnOfFour()\r\n            checkForRowOfFour()\r\n            checkForColumnOfThree()\r\n            checkForRowOfThree()\r\n            moveIntoSquareBelow()\r\n            setCurrentColorArrangement([...currentColorArrangement])\r\n        }, 100)\r\n        return () => clearInterval(timer)\r\n    }, [checkForColumnOfFour, checkForRowOfFour, checkForColumnOfThree, checkForRowOfThree, moveIntoSquareBelow, currentColorArrangement])\r\n\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"game\">\r\n                {currentColorArrangement.map((candyColor, index) => (\r\n                    <img\r\n                        key={index}\r\n                        src={candyColor}\r\n                        alt={candyColor}\r\n                        data-id={index}\r\n                        draggable={true}\r\n                        onDragStart={dragStart}\r\n                        onDragOver={(e) => e.preventDefault()}\r\n                        onDragEnter={(e) => e.preventDefault()}\r\n                        onDragLeave={(e) => e.preventDefault()}\r\n                        onDrop={dragDrop}\r\n                        onDragEnd={dragEnd}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <ScoreBoard score={scoreDisplay}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,KAAK,MAAM,oBAAoB;AAEtC,IAAMC,KAAK,GAAG,CAAC;AACf,IAAMC,WAAW,GAAG,CAChBR,SAAS,EACTE,WAAW,EACXC,WAAW,EACXC,QAAQ,EACRC,WAAW,EACXJ,UAAU,CACb;AAED,IAAMQ,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAAA,IAAAC,SAAA,GACgDC,QAAQ,CAAC,EAAE,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAnEI,uBAAuB,GAAAF,UAAA;IAAEG,0BAA0B,GAAAH,UAAA;EAAA,IAAAI,UAAA,GACNL,QAAQ,CAAC,IAAI,CAAC;IAAAM,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3DE,kBAAkB,GAAAD,UAAA;IAAEE,qBAAqB,GAAAF,UAAA;EAAA,IAAAG,UAAA,GACMT,QAAQ,CAAC,IAAI,CAAC;IAAAU,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA7DE,mBAAmB,GAAAD,UAAA;IAAEE,sBAAsB,GAAAF,UAAA;EAAA,IAAAG,UAAA,GACVb,QAAQ,CAAC,CAAC,CAAC;IAAAc,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA5CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EAEpC,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;IAAA,IAAAC,KAAA,YAAAA,MAAA,EACD;MAC1B,IAAMC,YAAY,GAAG,CAACC,CAAC,EAAEA,CAAC,GAAGxB,KAAK,EAAEwB,CAAC,GAAGxB,KAAK,GAAG,CAAC,EAAEwB,CAAC,GAAGxB,KAAK,GAAG,CAAC,CAAC;MACjE,IAAMyB,YAAY,GAAGlB,uBAAuB,CAACiB,CAAC,CAAC;MAC/C,IAAME,OAAO,GAAGnB,uBAAuB,CAACiB,CAAC,CAAC,KAAKzB,KAAK;MAEpD,IAAIwB,YAAY,CAACI,KAAK,CAAC,UAAAC,MAAM;QAAA,OAAIrB,uBAAuB,CAACqB,MAAM,CAAC,KAAKH,YAAY,IAAI,CAACC,OAAO;MAAA,EAAC,EAAE;QAC5FN,eAAe,CAAC,UAACS,KAAK;UAAA,OAAKA,KAAK,GAAG,CAAC;QAAA,EAAC;QACrCN,YAAY,CAACO,OAAO,CAAC,UAAAF,MAAM;UAAA,OAAIrB,uBAAuB,CAACqB,MAAM,CAAC,GAAG7B,KAAK;QAAA,EAAC;QAAA;UAAAgC,CAAA,EAChE;QAAI;MACf;IACJ,CAAC;IAVD,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE;MAAA,IAAAQ,IAAA,GAAAV,KAAA;MAAA,WAAAU,IAAA,sBAAAA,IAAA,CAAAD,CAAA;IAAA;EAWhC,CAAC;EAED,IAAME,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAAA,IAAAC,MAAA,YAAAA,OAAA,EACC;MACzB,IAAMC,SAAS,GAAG,CAACX,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;MAC1C,IAAMC,YAAY,GAAGlB,uBAAuB,CAACiB,CAAC,CAAC;MAC/C,IAAMY,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC9G,IAAMV,OAAO,GAAGnB,uBAAuB,CAACiB,CAAC,CAAC,KAAKzB,KAAK;MAEpD,IAAIqC,QAAQ,CAACC,QAAQ,CAACb,CAAC,CAAC;MAExB,IAAIW,SAAS,CAACR,KAAK,CAAC,UAAAC,MAAM;QAAA,OAAIrB,uBAAuB,CAACqB,MAAM,CAAC,KAAKH,YAAY,IAAI,CAACC,OAAO;MAAA,EAAC,EAAE;QACzFN,eAAe,CAAC,UAACS,KAAK;UAAA,OAAKA,KAAK,GAAG,CAAC;QAAA,EAAC;QACrCM,SAAS,CAACL,OAAO,CAAC,UAAAF,MAAM;UAAA,OAAIrB,uBAAuB,CAACqB,MAAM,CAAC,GAAG7B,KAAK;QAAA,EAAC;QAAA;UAAAgC,CAAA,EAC7D;QAAI;MACf;IACJ,CAAC;IAbD,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE;MAAA,IAAAc,KAAA,GAAAJ,MAAA;MAAA,IAAAI,KAAA,iBAMG;MAAQ,WAAAA,KAAA,sBAAAA,KAAA,CAAAP,CAAA;IAAA;EAQ1C,CAAC;EAED,IAAMQ,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAA,EAAS;IAAA,IAAAC,MAAA,YAAAA,OAAA,EACF;MAC1B,IAAMC,aAAa,GAAG,CAACjB,CAAC,EAAEA,CAAC,GAAGxB,KAAK,EAAEwB,CAAC,GAAGxB,KAAK,GAAG,CAAC,CAAC;MACnD,IAAMyB,YAAY,GAAGlB,uBAAuB,CAACiB,CAAC,CAAC;MAC/C,IAAME,OAAO,GAAGnB,uBAAuB,CAACiB,CAAC,CAAC,KAAKzB,KAAK;MAEpD,IAAI0C,aAAa,CAACd,KAAK,CAAC,UAAAC,MAAM;QAAA,OAAIrB,uBAAuB,CAACqB,MAAM,CAAC,KAAKH,YAAY,IAAI,CAACC,OAAO;MAAA,EAAC,EAAE;QAC7FN,eAAe,CAAC,UAACS,KAAK;UAAA,OAAKA,KAAK,GAAG,CAAC;QAAA,EAAC;QACrCY,aAAa,CAACX,OAAO,CAAC,UAAAF,MAAM;UAAA,OAAIrB,uBAAuB,CAACqB,MAAM,CAAC,GAAG7B,KAAK;QAAA,EAAC;QAAA;UAAAgC,CAAA,EACjE;QAAI;MACf;IACJ,CAAC;IAVD,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE;MAAA,IAAAkB,KAAA,GAAAF,MAAA;MAAA,WAAAE,KAAA,sBAAAA,KAAA,CAAAX,CAAA;IAAA;EAWhC,CAAC;EAED,IAAMY,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;IAAA,IAAAC,MAAA,YAAAA,OAAA,EACA;MACzB,IAAMC,UAAU,GAAG,CAACrB,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;MACpC,IAAMC,YAAY,GAAGlB,uBAAuB,CAACiB,CAAC,CAAC;MAC/C,IAAMY,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC/E,IAAMV,OAAO,GAAGnB,uBAAuB,CAACiB,CAAC,CAAC,KAAKzB,KAAK;MAEpD,IAAIqC,QAAQ,CAACC,QAAQ,CAACb,CAAC,CAAC;MAExB,IAAIqB,UAAU,CAAClB,KAAK,CAAC,UAAAC,MAAM;QAAA,OAAIrB,uBAAuB,CAACqB,MAAM,CAAC,KAAKH,YAAY,IAAI,CAACC,OAAO;MAAA,EAAC,EAAE;QAC1FN,eAAe,CAAC,UAACS,KAAK;UAAA,OAAKA,KAAK,GAAG,CAAC;QAAA,EAAC;QACrCgB,UAAU,CAACf,OAAO,CAAC,UAAAF,MAAM;UAAA,OAAIrB,uBAAuB,CAACqB,MAAM,CAAC,GAAG7B,KAAK;QAAA,EAAC;QAAA;UAAAgC,CAAA,EAC9D;QAAI;MACf;IACJ,CAAC;IAbD,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE;MAAA,IAAAsB,KAAA,GAAAF,MAAA;MAAA,IAAAE,KAAA,iBAMG;MAAQ,WAAAA,KAAA,sBAAAA,KAAA,CAAAf,CAAA;IAAA;EAQ1C,CAAC;EAED,IAAMgB,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAC9B,KAAK,IAAIvB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC1B,IAAMwB,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACzC,IAAMC,UAAU,GAAGD,QAAQ,CAACX,QAAQ,CAACb,CAAC,CAAC;MAEvC,IAAIyB,UAAU,IAAI1C,uBAAuB,CAACiB,CAAC,CAAC,KAAKzB,KAAK,EAAE;QACpD,IAAImD,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGpD,WAAW,CAACqD,MAAM,CAAC;QACjE/C,uBAAuB,CAACiB,CAAC,CAAC,GAAGvB,WAAW,CAACiD,YAAY,CAAC;MAC1D;MAEA,IAAK3C,uBAAuB,CAACiB,CAAC,GAAGxB,KAAK,CAAC,KAAMD,KAAK,EAAE;QAChDQ,uBAAuB,CAACiB,CAAC,GAAGxB,KAAK,CAAC,GAAGO,uBAAuB,CAACiB,CAAC,CAAC;QAC/DjB,uBAAuB,CAACiB,CAAC,CAAC,GAAGzB,KAAK;MACtC;IACJ;EACJ,CAAC;EAED,IAAMwD,SAAS,GAAG,SAAZA,SAASA,CAAIC,CAAC,EAAK;IACrB5C,qBAAqB,CAAC4C,CAAC,CAACC,MAAM,CAAC;EACnC,CAAC;EACD,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIF,CAAC,EAAK;IACpBxC,sBAAsB,CAACwC,CAAC,CAACC,MAAM,CAAC;EACpC,CAAC;EACD,IAAME,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IAClB,IAAMC,oBAAoB,GAAGC,QAAQ,CAAClD,kBAAkB,CAACmD,YAAY,CAAC,SAAS,CAAC,CAAC;IACjF,IAAMC,qBAAqB,GAAGF,QAAQ,CAAC9C,mBAAmB,CAAC+C,YAAY,CAAC,SAAS,CAAC,CAAC;IAEnFvD,uBAAuB,CAACwD,qBAAqB,CAAC,GAAGpD,kBAAkB,CAACmD,YAAY,CAAC,KAAK,CAAC;IACvFvD,uBAAuB,CAACqD,oBAAoB,CAAC,GAAG7C,mBAAmB,CAAC+C,YAAY,CAAC,KAAK,CAAC;IAEvF,IAAME,UAAU,GAAG,CACfJ,oBAAoB,GAAG,CAAC,EACxBA,oBAAoB,GAAG5D,KAAK,EAC5B4D,oBAAoB,GAAG,CAAC,EACxBA,oBAAoB,GAAG5D,KAAK,CAC/B;IAED,IAAMiE,SAAS,GAAGD,UAAU,CAAC3B,QAAQ,CAAC0B,qBAAqB,CAAC;IAE5D,IAAMG,eAAe,GAAG7C,oBAAoB,CAAC,CAAC;IAC9C,IAAM8C,YAAY,GAAGlC,iBAAiB,CAAC,CAAC;IACxC,IAAMmC,gBAAgB,GAAG7B,qBAAqB,CAAC,CAAC;IAChD,IAAM8B,aAAa,GAAG1B,kBAAkB,CAAC,CAAC;IAE1C,IAAIoB,qBAAqB,IACrBE,SAAS,KACRI,aAAa,IAAIF,YAAY,IAAID,eAAe,IAAIE,gBAAgB,CAAC,EAAE;MACxExD,qBAAqB,CAAC,IAAI,CAAC;MAC3BI,sBAAsB,CAAC,IAAI,CAAC;IAChC,CAAC,MAAM;MACHT,uBAAuB,CAACwD,qBAAqB,CAAC,GAAGhD,mBAAmB,CAAC+C,YAAY,CAAC,KAAK,CAAC;MACxFvD,uBAAuB,CAACqD,oBAAoB,CAAC,GAAGjD,kBAAkB,CAACmD,YAAY,CAAC,KAAK,CAAC;MACtFtD,0BAA0B,CAAA8D,kBAAA,CAAK/D,uBAAuB,CAAC,CAAC;IAC5D;EACJ,CAAC;EAGD,IAAMgE,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtB,IAAMC,sBAAsB,GAAG,EAAE;IACjC,KAAK,IAAIhD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxB,KAAK,GAAGA,KAAK,EAAEwB,CAAC,EAAE,EAAE;MACpC,IAAMiD,WAAW,GAAGxE,WAAW,CAACkD,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGpD,WAAW,CAACqD,MAAM,CAAC,CAAC;MAC/EkB,sBAAsB,CAACE,IAAI,CAACD,WAAW,CAAC;IAC5C;IACAjE,0BAA0B,CAACgE,sBAAsB,CAAC;EACtD,CAAC;EAEDG,SAAS,CAAC,YAAM;IACZJ,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAENI,SAAS,CAAC,YAAM;IACZ,IAAMC,KAAK,GAAGC,WAAW,CAAC,YAAM;MAC5BxD,oBAAoB,CAAC,CAAC;MACtBY,iBAAiB,CAAC,CAAC;MACnBM,qBAAqB,CAAC,CAAC;MACvBI,kBAAkB,CAAC,CAAC;MACpBI,mBAAmB,CAAC,CAAC;MACrBvC,0BAA0B,CAAA8D,kBAAA,CAAK/D,uBAAuB,CAAC,CAAC;IAC5D,CAAC,EAAE,GAAG,CAAC;IACP,OAAO;MAAA,OAAMuE,aAAa,CAACF,KAAK,CAAC;IAAA;EACrC,CAAC,EAAE,CAACvD,oBAAoB,EAAEY,iBAAiB,EAAEM,qBAAqB,EAAEI,kBAAkB,EAAEI,mBAAmB,EAAExC,uBAAuB,CAAC,CAAC;EAGtI,oBACIhB,KAAA,CAAAwF,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChBhG,KAAA,CAAAwF,aAAA;IAAKC,SAAS,EAAC,MAAM;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChBhF,uBAAuB,CAACiF,GAAG,CAAC,UAACC,UAAU,EAAEC,KAAK;IAAA,oBAC3CnG,KAAA,CAAAwF,aAAA;MACIY,GAAG,EAAED,KAAM;MACXE,GAAG,EAAEH,UAAW;MAChBI,GAAG,EAAEJ,UAAW;MAChB,WAASC,KAAM;MACfI,SAAS,EAAE,IAAK;MAChBC,WAAW,EAAExC,SAAU;MACvByC,UAAU,EAAE,SAAAA,WAACxC,CAAC;QAAA,OAAKA,CAAC,CAACyC,cAAc,CAAC,CAAC;MAAA,CAAC;MACtCC,WAAW,EAAE,SAAAA,YAAC1C,CAAC;QAAA,OAAKA,CAAC,CAACyC,cAAc,CAAC,CAAC;MAAA,CAAC;MACvCE,WAAW,EAAE,SAAAA,YAAC3C,CAAC;QAAA,OAAKA,CAAC,CAACyC,cAAc,CAAC,CAAC;MAAA,CAAC;MACvCG,MAAM,EAAE1C,QAAS;MACjB2C,SAAS,EAAE1C,OAAQ;MAAAsB,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACtB,CAAC;EAAA,CACL,CACA,CAAC,eACNhG,KAAA,CAAAwF,aAAA,CAACvF,UAAU;IAACqC,KAAK,EAAEV,YAAa;IAAA8D,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAChC,CAAC;AAEd,CAAC;AAED,eAAerF,GAAG"},"metadata":{},"sourceType":"module"}